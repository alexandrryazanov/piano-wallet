import midi from "midi";
import { askQuestion } from "./io";
import { styleText } from "node:util";

export async function listenMelody() {
  // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Input –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MIDI-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º
  const input = new midi.Input();

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–∫–æ–ª—å–∫–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω–æ
  const devicesCount = input.getPortCount();

  // –ï—Å–ª–∏ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –¥–æ—Å—Ç—É–ø–Ω—ã, –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ø–µ—Ä–≤–æ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É
  if (devicesCount < 1) {
    console.log("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö MIDI-—É—Å—Ç—Ä–æ–π—Å—Ç–≤.");
    process.exit();
  }

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø–µ—Ä–≤–æ–º—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤—É (0 ‚Äî —ç—Ç–æ –∏–Ω–¥–µ–∫—Å –ø–æ—Ä—Ç–∞)
  input.openPort(0);

  console.log(styleText(["green"], "–£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≥–æ—Ç–æ–≤–æ... –ù–∞—á–Ω–∏—Ç–µ –∏–≥—Ä–∞—Ç—å!"));

  const melodyArray: number[] = [];
  input.on("message", (deltaTime, message: number[]) => {
    const [command, note, velocity] = message;
    if (command !== 144 || velocity <= 0) return; // –ï—Å–ª–∏ —ç—Ç–æ –Ω–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ç–∏–ø–∞ "Note On"

    if (melodyArray.length === 0) {
      console.log("\nüéπ –°–∏–≥–Ω–∞–ª –ø–æ—Å—Ç—É–ø–∞–µ—Ç! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–≥—Ä–∞—Ç—å...");
    }
    melodyArray.push(note);
  });

  await askQuestion(styleText(["green"], "–ù–∞–∂–º–∏—Ç–µ Enter, –∫–æ–≥–¥–∞ –∑–∞–∫–æ–Ω—á–∏—Ç–µ..."));

  if (melodyArray.length < 5) {
    console.log("–ú–µ–ª–æ–¥–∏—è —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∞—è! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑...");
    return await listenMelody();
  }

  return melodyArray;
}
